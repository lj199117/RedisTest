<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="lj.dao.UserMsgSettingMapper">
  <resultMap id="BaseResultMap" type="lj.model.UserMsgSetting">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="receive_offs" jdbcType="VARCHAR" property="receiveOffs" />
    <result column="clear_points" jdbcType="VARCHAR" property="clearPoints" />
    <result column="fetch_points" jdbcType="VARCHAR" property="fetchPoints" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, receive_offs, clear_points, fetch_points, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from wlm_user_msg_setting
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from wlm_user_msg_setting
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="lj.model.UserMsgSetting">
    insert into wlm_user_msg_setting (id, user_id, receive_offs, 
      clear_points, fetch_points, create_time, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=INTEGER}, #{receiveOffs,jdbcType=VARCHAR}, 
      #{clearPoints,jdbcType=VARCHAR}, #{fetchPoints,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="lj.model.UserMsgSetting">
    insert into wlm_user_msg_setting
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="receiveOffs != null">
        receive_offs,
      </if>
      <if test="clearPoints != null">
        clear_points,
      </if>
      <if test="fetchPoints != null">
        fetch_points,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="receiveOffs != null">
        #{receiveOffs,jdbcType=VARCHAR},
      </if>
      <if test="clearPoints != null">
        #{clearPoints,jdbcType=VARCHAR},
      </if>
      <if test="fetchPoints != null">
        #{fetchPoints,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="lj.model.UserMsgSetting">
    update wlm_user_msg_setting
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="receiveOffs != null">
        receive_offs = #{receiveOffs,jdbcType=VARCHAR},
      </if>
      <if test="clearPoints != null">
        clear_points = #{clearPoints,jdbcType=VARCHAR},
      </if>
      <if test="fetchPoints != null">
        fetch_points = #{fetchPoints,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="lj.model.UserMsgSetting">
    update wlm_user_msg_setting
    set user_id = #{userId,jdbcType=INTEGER},
      receive_offs = #{receiveOffs,jdbcType=VARCHAR},
      clear_points = #{clearPoints,jdbcType=VARCHAR},
      fetch_points = #{fetchPoints,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>